---
# tasks file for roles/prometheus
- name: check if prometheus exist
  stat:
    path: "{{ prometheus_bin }}"
  register: __check_prometheus_present

- name: create prometheus user
  user:
    name: "{{ prometheus_user }}"
    append: true
    shell: /usr/sbin/nologin
    system: true
    create_home: false

- name: create prometheus config dir
  file:
    path: "{{ prometheus_dir_configuration }}"
    state: directory
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"

- name: create prometheus lib dir
  file:
    path: "/var/lib/prometheus"
    state: directory
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"

- name: download prometheus
  get_url:
    url: "{{ prometheus_url }}/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
    dest: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
    mode: 0755
  when: __check_prometheus_present.stat.exists == false or not __get_prometheus_version.stdout == prometheus_version

- name: unzip prometheus if not exist
  unarchive:
    src: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
    dest: /tmp/
    remote_src: yes
  when: __check_prometheus_present.stat.exists == false or not __get_prometheus_version.stdout == prometheus_version

- name: move the binary to the final destination
  copy:
    src: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64/prometheus"
    dest: "{{ prometheus_bin }}"
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: 0755
    remote_src: yes
  when: __check_prometheus_present.stat.exists == false or not __get_prometheus_version.stdout == prometheus_version

- name: clean
  file:
    path: /tmp/promotheus-{{ prometheus_version }}.linux-amd64/
    state: absent

- name: prometheus configuration file
  template:
    src: prometheus.yml.in
    dest: "{{ prometheus_dir_configuration }}/prometheus.yml"
    mode: 0755
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
  notify: reload_prometheus

- name: install service
  template:
    src: promotheus.service.in
    dest: /etc/systemd/system/prometheus.service
    owner: root
    group: root
    mode: 0755
  notify: restart_prometheus
